name: "OGImage"
branding:
  icon: "image"
  color: "gray-dark"
description: "Cache modules from the PowerShell Gallery"
inputs:
  template-path:
    description: "The path to the html to use as a template"
    default: "${{ github.action_path }}/sample/template.md"
    required: false
  replace-hash:
    description: "Hash of replacements"
    required: false
    default: |-
      @{
        "--TITLE--"         = "Sample Title"
        "--BODY--"          = "Sample body"
        "--WHATEVERELSE--"  = "This too"
        "--FOOTER--"        = "Footer sample"
      }
  replace-hash-filepath:
    description: "File hash of replacements"
    required: false
  output-path:
    description: "The output path where the generated images will be saved"
    default: "/tmp/pics"
    required: false
  css-path:
    description: "The output path where the generated images will be saved"
    default: "${{ github.action_path }}/sample/style.css"
    required: false
  no-artifact:
    description: "Don't upload the artifact"
    default: "false"
    required: false
  no-optimize:
    description: "Don't optimize the png (greatly decreases size but takes a bit)"
    default: "false"
    required: false
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - uses: nikeee/setup-pandoc@v1
    - uses: actions/setup-node@v3
      with:
        node-version: lts/*

    - id: psoutput
      shell: pwsh
      run: |
        npx --yes playwright install --with-deps chromium
        sudo apt-get install -y optipng
        $inputs = @{
              TemplatePath          = "${{  inputs.template-path }}"
              ReplaceHash           = ${{  inputs.replace-hash }}
              CSSPath               = "${{  inputs.css-path }}"
              OutputPath            = "${{ inputs.output-path }}"
              ReplaceHashFilePath   = "${{  inputs.replace-hash-filepath }}"
              NoOptimize            = "${{  inputs.no-optimize }}"
          }

        ${{ github.action_path }}/main.ps1 @inputs

    - name: Upload artifact
      if: ${{  inputs.no-artifact }} != 'true'
      uses: actions/upload-artifact@v2
      with:
        name: pics
        path: ${{ inputs.output-path }}
