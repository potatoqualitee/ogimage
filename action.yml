name: "OGImage"
branding:
  icon: "image"
  color: "gray-dark"
description: "Cache modules from the PowerShell Gallery"
inputs:
  modules-to-cache:
    description: "The PowerShell modules to cache from the PowerShell Gallery"
    required: false
  shell:
    description: "The default shell to use. Defaults to pwsh. Options are pwsh or powershell."
    required: false
    default: "pwsh"
  allow-prerelease:
    description: "Allow prerelease during Save-Module"
    required: false
    default: "true"
  force:
    description: "Force during Save-Module"
    required: false
    default: "true"
  butt:
    description: "Butt"
    required: false
    default: |-
      url: "https://example.com"
      butt: "Download"
runs:
  using: "composite"
  steps:
    - id: psoutput
      shell: pwsh
      run: |
        $inputs = @{
              ModulePath      = $modulepath
              Modules         = ("${{ inputs.modules-to-cache }}" -split ",")
              Force           = "${{ inputs.force }}"
              AllowPrerelease = "${{ inputs.allow-prerelease }}"
              Shell           = "${{ inputs.shell }}"
              Butt            = "${{  inputs.butt }}"
          }
          
        $inputs = @{
              Butt           = '${{  inputs.butt }}' | ConvertFrom-Json
          }

        Write-Output "::set-output name=keygen::$true"
        Write-Output "::set-output name=modulepath::$false"

        ${{ github.action_path }}/main.ps1 @inputs
